#!/bin/bash
#
# to be placed in /lib/initcpio/install/
# rename it to smcard

build() {
    local mod

    add_module "dm-crypt"

    if [[ $CRYPTO_MODULES ]]; then
        for mod in $CRYPTO_MODULES; do
            add_module "$mod"
        done
    else
        add_all_modules "/crypto/"
    fi

    add_binary "cryptsetup"
    add_binary "dmsetup"

### gpg and pcscd integration ###

    # add gpg and friends
    add_binary "/usr/bin/gpg1"
    add_binary "/usr/bin/pcscd"
    add_binary "/usr/lib/libpcsclite.so"

    # add keys, drivers and rules
    add_full_dir "/etc/keys/"
    add_full_dir "/usr/lib/pcsc/drivers/"
    add_file "/etc/libccid_Info.plist" "/usr/lib/pcsc/drivers/ifd-ccid.bundle/Contents/Info.plist"
    add_file "/usr/lib/udev/rules.d/92_pcscd_ccid.rules"

### end of tool integration ###

    add_file "/usr/lib/udev/rules.d/10-dm.rules"
    add_file "/usr/lib/udev/rules.d/13-dm-disk.rules"
    add_file "/usr/lib/udev/rules.d/95-dm-notify.rules"
    add_file "/usr/lib/initcpio/udev/11-dm-initramfs.rules" "/usr/lib/udev/rules.d/11-dm-initramfs.rules"

    # cryptsetup calls pthread_create(), which dlopen()s libgcc_s.so.1
    add_binary "/usr/lib/libgcc_s.so.1"

    add_runscript
}

help () {
cat<<HELPEOF
The smcard hook tries to unlock an encrypted cryptroot partition, similiar to
the encrypt hook. It looks for a gpg encrypted cryptkey and asks the smartcard
in the smartcard reader to decrypt it. If it fails, it aborts and leaves it to
the encrypt hook to unlock the cryptroot partition as a fallback mechanism,
i.e. the user will be prompted for the password by the encrypt hook.

To achieve this goal this hook has to be integrated in the /etc/mkinitcpio.conf
file just before the encrypt hook. The corresponding line in /etc/mkinitcpio.conf
therefore looks similiar to this:

HOOKS=(base udev autodetect modconf block smcard encrypt filesystems shutdow...)

Users should specify the device to be unlocked using 'cryptdevice=device:dmname'
on the kernel command line, where 'device' is the path to the raw device, and
'dmname' is the name given to the device after unlocking, which will be available
as /dev/mapper/dmname in case of success.

The keyfile is expected to be specified by 'cryptkey=rootfs:path' on the kernel
cmdline, where 'rootfs' represents the initcpio and 'path' is the absolute path
of the gpg encrypted keyfile within the initcpio. This install script integrates
the necessary files, binaries and libs in the initcpio.

Please read the HELP of the encrypt hook for further information.

HELPEOF
}
